{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/css/flexbox","result":{"data":{"markdownRemark":{"id":"13b76ec5-6122-55b0-8b96-a2de078af1e3","html":"<p>In <code class=\"language-text\">flexbox</code>, a parent element is called a flex container, and the children are called flex items. There are a lot of properties that you can use with flexbox. But some properties are used more than others. so let’s talk about the ones that are used more frequently.</p>\n<p>The word <code class=\"language-text\">flex</code> is used here because it allows you to align and distribute space among items in a container even when their size is unknown. The main idea of the <code class=\"language-text\">flexbox</code> is to let the container change its item sizes to fill the available space.</p>\n<p>let’s think about HTML tags like this</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>First, in order for you to use flexbox, you gotta declare the parent as a flex. And now let’s look at some properties that you can set to your flex container</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.parent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p><code class=\"language-text\">flex-direction</code> : just like the name says, it determines the direction in which your flex items are aligned.</p>\n<ul>\n<li>There are four <code class=\"language-text\">flex-direction</code> options. <code class=\"language-text\">row</code>, <code class=\"language-text\">row-reverse</code>, <code class=\"language-text\">column</code>, and <code class=\"language-text\">column-reverse</code>. It’s pretty straightforward.</li>\n<li><code class=\"language-text\">row</code> is the default. it aligns your items left to right. and <code class=\"language-text\">row-reverse</code> is row, but reversed. so it aligns your items right to left. <code class=\"language-text\">column</code> aligns your items top to bottom like a column, and <code class=\"language-text\">column-reverse</code> is column but reversed. so it aligns them bottom to top.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">flex-wrap</code>. By default, flex items will all try to fit into a single line. but you can change that and allow your items to wrap around the container.</p>\n<ul>\n<li>there are three <code class=\"language-text\">flex-wrap</code> options. <code class=\"language-text\">nowrap</code>, <code class=\"language-text\">wrap</code>, and <code class=\"language-text\">wrap-reverse</code>.</li>\n<li>let me add more flex items to help you understand this better. You can see how the width shrinks when I add more flex items.</li>\n<li>If you remember, I told you in the very beginning that the main idea of the flexbox is to let the container change its item sizes. and by default, they all want to fit in one line.</li>\n<li><code class=\"language-text\">nowrap</code> is the default. it does not wrap. <code class=\"language-text\">wrap</code> allows your children elements to wrap onto multiple lines from top to bottom. <code class=\"language-text\">wrap-reverse</code> is wrap but reversed. it wraps from bottom to top.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">justify-content</code>. This defines the alignment along the <code class=\"language-text\">flex-direction</code>. there are a lot of options that you can use for this property. but the ones that are commonly used are <code class=\"language-text\">flex-start</code>, <code class=\"language-text\">flex-end</code>, <code class=\"language-text\">center</code>, and <code class=\"language-text\">space-between</code></p>\n<ul>\n<li><code class=\"language-text\">flex-start</code> is the default. the items are leaning towards the start of the <code class=\"language-text\">flex-direction</code></li>\n<li><code class=\"language-text\">flex-end</code>is the opposite of <code class=\"language-text\">flex-start</code>. the items are leaning towards the end</li>\n<li><code class=\"language-text\">center</code> aligns items at the center</li>\n<li><code class=\"language-text\">space-between</code> the first item is at the start, the last item is at the end. and the rest are distributed evenly.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">align-items</code>. this defines the alignment along the other direction. if you set your <code class=\"language-text\">flex-direction</code> to <code class=\"language-text\">row</code>, <code class=\"language-text\">align-items</code> defines alignments along the vertical line. the ones that are commonly used are <code class=\"language-text\">flex-start</code>, <code class=\"language-text\">flex-end</code>, and <code class=\"language-text\">center</code></p>\n<ul>\n<li><code class=\"language-text\">flex-start</code> aligns items at the start of the line</li>\n<li><code class=\"language-text\">flex-end</code> aligns items at the end of the line</li>\n<li><code class=\"language-text\">center</code> aligns items at the center of the line, I personally use this option a lot</li>\n</ul>\n</li>\n</ol>\n<p>And there are also properties that you can set on your flex items. A lot of times, you don’t have to set properties on your flex items to use flexbox. but sometimes, you gotta use these properties as well. Again, I am going to talk about the ones that are used more often.</p>\n<ol>\n<li><code class=\"language-text\">flex-grow</code>\n<ul>\n<li>if you remember, I talked about in the beginning how flexbox changes its sizes to fill the container. if you set an item to <code class=\"language-text\">flex-grow: 1</code> this specific item will fill the remaining spaces that are left.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">flex-shrink</code>\n<ul>\n<li>this is the opposite of <code class=\"language-text\">flex-grow</code>. <code class=\"language-text\">flex-shrink</code> declares which item to shrink first if the container is too small</li>\n</ul>\n</li>\n</ol>\n<p>If you need some visuals to understand this better, please check out the YouTube video below.</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 35%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube.com/embed/JBcHff_JcXM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>","fields":{"slug":"/posts/2022//css/flexbox","tagSlugs":["/tag/css/"]},"frontmatter":{"date":"2022-01-11T11:34:37.121Z","description":"How the flexbox works in CSS","tags":["CSS"],"title":"CSS - flexbox","socialImage":null}}},"pageContext":{"slug":"/posts/2022//css/flexbox"}},"staticQueryHashes":["251939775","288581551","401334301"]}