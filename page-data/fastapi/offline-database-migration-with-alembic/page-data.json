{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/fastapi/offline-database-migration-with-alembic","result":{"data":{"markdownRemark":{"id":"309a4e2f-c530-50da-89a5-1577225fa976","html":"<p><a href=\"https://jasonkang14.github.io/fastapi/database-using-mysql\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이전포스트</a> 에서 이어진다…\n지금은 MySQL + SQLAlchemy 설정까지는 끝났고, 오프라인 데이터베이스 마이그레이션을 하기위해 <code class=\"language-text\">alembic</code>을 설정하려고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> alembic\n\npip freeze <span class=\"token operator\">></span> requirements.txt</code></pre></div>\n<p>혼자 하는 프로젝트지만 나중에 dockerize해야하기 때문에 <code class=\"language-text\">requirements.txt</code>도 잘 관리해야 한다. 여담이지만 파이썬 레포를 생성하면 무조건 conda를 사용해서 가상환경부터 만드는 습관이 있다. 이제 alembic을 적용해본다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">alembic init alembic</code></pre></div>\n<p>그러면 아래와 같은 메세지가 나온다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Creating directory /Users/byeongjinkang/personal/development/mukkang_server/alembic ...  done\n  Creating directory /Users/byeongjinkang/personal/development/mukkang_server/alembic/versions ...  done\n  Generating /Users/byeongjinkang/personal/development/mukkang_server/alembic/script.py.mako ...  done\n  Generating /Users/byeongjinkang/personal/development/mukkang_server/alembic/env.py ...  done\n  Generating /Users/byeongjinkang/personal/development/mukkang_server/alembic/README ...  done\n  Generating /Users/byeongjinkang/personal/development/mukkang_server/alembic.ini ...  done\n  Please edit configuration/connection/logging settings in '/Users/byeongjinkang/personal/development/mukkang_server/alembic.ini'\n  before proceeding.</code></pre></div>\n<p>이제 디렉토리 구조는 아래와 같이 바뀐다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app\n├── __init__.py\n├── main.py\n├── alembic\n│   ├── env.py\n│   ├── script.py.mako\n│   └── versions\n├── alembic.ini\n├── routers\n│   ├── __init__.py\n│   └── users.py\n└── sql\n    ├── __init__.py\n    ├── crud.py\n    ├── database.py\n    ├── models.py\n    └── schemas.py</code></pre></div>\n<p>이제 위 메세지에서 나온 <code class=\"language-text\">.ini</code> 파일을 수정한다. 가장 먼저 <code class=\"language-text\">database.py</code>에 선언했던 데이터베이스 인터페이스 주소를 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># the output encoding used when revision files</span>\n<span class=\"token comment\"># are written from script.py.mako</span>\n<span class=\"token comment\"># output_encoding = utf-8</span>\n\nsqlalchemy<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> mysql<span class=\"token operator\">+</span>mysqlconnector<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>root<span class=\"token punctuation\">:</span>password@localhost<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span><span class=\"token operator\">/</span>database</code></pre></div>\n<p>나중에 환경변수화 해야겠지만 일단은 그냥 넣어둔다.\n장고에서 사용하는\n<code class=\"language-text\">python manage.py makemigrations</code>\n와 유사한 기능을 하는 명령어는\n<code class=\"language-text\">alembic revision --autogenerate -m \"CUSTOM MESSAGE\"</code>\n이다.</p>\n<p><code class=\"language-text\">autogenerate</code>를 사용하지 않으려면 revision파일을 만들고 일일이 테이블을 선언해줘야 하는데, 이러면 <code class=\"language-text\">models.py</code>에 작성한 내용을 포맷에 맞게 입력해야한다. 따라서 <code class=\"language-text\">autogenerate</code>를 사용하기 위해서 alembic 디렉토리 내 <code class=\"language-text\">env.py</code>의 <code class=\"language-text\">target_metadata</code>라는 변수를 추가로 설정해줘야한다.\n예제를 보면 <code class=\"language-text\">model</code>에서 <code class=\"language-text\">Base</code>를 import 한다. 따라서 기존에 <code class=\"language-text\">database.py</code> 에서 선언한 <code class=\"language-text\">declarative_base</code>를 <code class=\"language-text\">models.py</code>로 옮기고 <code class=\"language-text\">env.py</code>파일을 업데이트 한다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># env.py</span>\n\n<span class=\"token keyword\">from</span> sql<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Base\n\n<span class=\"token comment\"># add your model's MetaData object here</span>\n<span class=\"token comment\"># for 'autogenerate' support</span>\n<span class=\"token comment\"># from myapp import mymodel</span>\n<span class=\"token comment\"># target_metadata = mymodel.Base.metadata</span>\ntarget_metadata <span class=\"token operator\">=</span> Base<span class=\"token punctuation\">.</span>metadata </code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># models.py</span>\n\n<span class=\"token keyword\">from</span> sqlalchemy <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    Boolean<span class=\"token punctuation\">,</span>\n    Column<span class=\"token punctuation\">,</span>\n    Date<span class=\"token punctuation\">,</span>\n    Integer<span class=\"token punctuation\">,</span>\n    String<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> sqlalchemy<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>declarative <span class=\"token keyword\">import</span> declarative_base\n\nBase <span class=\"token operator\">=</span> declarative_base<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>Base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    __tablename__ <span class=\"token operator\">=</span> <span class=\"token string\">\"users\"</span>\n\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    email <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    password <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span>\n    is_active <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    phone <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    birth <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    gender <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>그러고 위에 명령어를 다시 날려준다</p>\n<p><code class=\"language-text\">alembic revision --autogenerate -m \"Added user table\"</code></p>\n<p>위 명령어를 실행하면 MySQL 서버에 데이터베이스가 없다는 에러가 난다. 일단 데이터베이스를 먼저 만들어주고 명령어를 다시 돌린다.\n장고 마이그레이션 파일과 유사한 파일이 생긴다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># alembic/versions/</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"Added user table\n\nRevision ID: 3829d0b7507e\nRevises: \nCreate Date: 2022-07-06 00:09:19.842063\n\n\"\"\"</span>\n<span class=\"token keyword\">from</span> alembic <span class=\"token keyword\">import</span> op\n<span class=\"token keyword\">import</span> sqlalchemy <span class=\"token keyword\">as</span> sa\n\n\n<span class=\"token comment\"># revision identifiers, used by Alembic.</span>\nrevision <span class=\"token operator\">=</span> <span class=\"token string\">'3829d0b7507e'</span>\ndown_revision <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\nbranch_labels <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\ndepends_on <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">upgrade</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ### commands auto generated by Alembic - please adjust! ###</span>\n    op<span class=\"token punctuation\">.</span>create_table<span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'is_active'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>Boolean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'phone'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'birth'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>PrimaryKeyConstraint<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>UniqueConstraint<span class=\"token punctuation\">(</span><span class=\"token string\">'birth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>UniqueConstraint<span class=\"token punctuation\">(</span><span class=\"token string\">'phone'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    op<span class=\"token punctuation\">.</span>create_index<span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">(</span><span class=\"token string\">'ix_users_email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    op<span class=\"token punctuation\">.</span>create_index<span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">(</span><span class=\"token string\">'ix_users_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ### end Alembic commands ###</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">downgrade</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ### commands auto generated by Alembic - please adjust! ###</span>\n    op<span class=\"token punctuation\">.</span>drop_index<span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">(</span><span class=\"token string\">'ix_users_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> table_name<span class=\"token operator\">=</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n    op<span class=\"token punctuation\">.</span>drop_index<span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">(</span><span class=\"token string\">'ix_users_email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> table_name<span class=\"token operator\">=</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n    op<span class=\"token punctuation\">.</span>drop_table<span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ### end Alembic commands ###</span>\n</code></pre></div>\n<p>이제 마이그레이션을 디비에 적용한다.\n<code class=\"language-text\">alembic upgrade head</code>\n이러면 또 에러가 발생하는데,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>in table <span class=\"token string\">'users'</span>, <span class=\"token function\">column</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span>: VARCHAR requires a length on dialect mysql</code></pre></div>\n<p>FastAPI에서 제공한 예제는 SQLITE 용이고, mysql은 string에서 length를 지정해줘야 하기 때문이다.\n따라서 <code class=\"language-text\">models.py</code>를 수정한다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># models.py</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>Base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    __tablename__ <span class=\"token operator\">=</span> <span class=\"token string\">\"users\"</span>\n\n    <span class=\"token builtin\">id</span>        <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    email     <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    password  <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    is_active <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    phone     <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    birth     <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    gender    <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>기존 파일을 지우고 이제 다시 autogenerate를 해본다\n<code class=\"language-text\">alembic revision --autogenerate -m \"Added user table\"</code>\n<code class=\"language-text\">String</code>들에 length 정보가 추가된 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># /versions</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">upgrade</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ### commands auto generated by Alembic - please adjust! ###</span>\n    op<span class=\"token punctuation\">.</span>create_table<span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span>length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span>length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'is_active'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>Boolean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'phone'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span>length<span class=\"token operator\">=</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'birth'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span>length<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>PrimaryKeyConstraint<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>UniqueConstraint<span class=\"token punctuation\">(</span><span class=\"token string\">'birth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sa<span class=\"token punctuation\">.</span>UniqueConstraint<span class=\"token punctuation\">(</span><span class=\"token string\">'phone'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    op<span class=\"token punctuation\">.</span>create_index<span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">(</span><span class=\"token string\">'ix_users_email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    op<span class=\"token punctuation\">.</span>create_index<span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">(</span><span class=\"token string\">'ix_users_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ### end Alembic commands ###</span></code></pre></div>\n<p>이제 마이그레이션을 디비에 적용한다.\n<code class=\"language-text\">alembic upgrade head</code></p>\n<p>MySQL에도 잘 적용된 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">+-----------+--------------+------+-----+---------+----------------+\n| Field     | Type         | Null | Key | Default | Extra          |\n+-----------+--------------+------+-----+---------+----------------+\n| id        | int(11)      | NO   | PRI | NULL    | auto_increment |\n| email     | varchar(255) | YES  | UNI | NULL    |                |\n| password  | varchar(255) | YES  |     | NULL    |                |\n| is_active | tinyint(1)   | YES  |     | NULL    |                |\n| phone     | varchar(13)  | YES  | UNI | NULL    |                |\n| birth     | date         | YES  | UNI | NULL    |                |\n| gender    | varchar(1)   | YES  |     | NULL    |                |\n+-----------+--------------+------+-----+---------+----------------+</code></pre></div>\n<p>서버도 잘 돌아가고\n<img src=\"https://i.imgur.com/grd2eed.png\" alt=\"running-fastapi-server\">\nHello World!도 잘 찍힌다.\n<img src=\"https://i.imgur.com/QtnQ1d7.png\" alt=\"hello-world\">\n이어서 다음 포스트에서는 회원가입을 다뤄보겠다.</p>","fields":{"slug":"/posts/2022//fastapi/offline-database-migration-with-alembic","tagSlugs":["/tag/fastapi/"]},"frontmatter":{"date":"2022-07-06T01:21:37.121Z","description":"SQLAlchemy + Alembic을 활용한 데이터베이스 연동","tags":["FastAPI"],"title":"Alembic을 사용한 Offline Database Migration","socialImage":null}}},"pageContext":{"slug":"/posts/2022//fastapi/offline-database-migration-with-alembic"}},"staticQueryHashes":["251939775","288581551","401334301"]}