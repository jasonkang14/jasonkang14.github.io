{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/azure/adding-kubernetes-secrets-to-deployment-center","result":{"data":{"markdownRemark":{"id":"9ad0bb35-e30f-5c04-86b2-c9b663ebcc7b","html":"<p>Azure Kubernetes에서 Deployment Center라는 섹션을 통해 깃헙 레포와 쿠버네티스 클러스터를 연동하고 CI/CD를 구축하려고 한다. 단순한 연동을 통해서 서버 pod가 잘 올라가는 것은 확인했는데, 기존에 설정한 환경변수를 불러올 수 없는 문제가 있었다.</p>\n<p>기존에는 깃헙액션의 워크플로우를 사용할 때, <code class=\"language-text\">${{ secrets.ENVIRONMENT_VARIABLE}}</code> 과 같은 형태를 사용해서 도커 이미지를 빌드하고 컨테이너를 올렸기에, <a href=\"https://jasonkang14.github.io/azure/kubernetes-workflow-jobs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이전 포스트</a>의 다양한 워크플로우에 같은 방식을 계속 시도했으나 실패했다.</p>\n<p><strong>Build and push image to ACR</strong> 과정에서 github secrets에 있는 환경변수를 넣어주니, 이미지를 빌드할 때 빌드는 성공했지만 환경변수를 배포된 컨테이너에서 읽어올 수 없었다. 그래서 도커의 환경변수가 아니라 <a href=\"https://kubernetes.io/docs/concepts/configuration/secret/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kubernetes Secret</a>을 사용해보기로 했다.</p>\n<p>공식문서의 설명을 요약하면 아래와 같은 파일을 만들고</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> YWRtaW4=\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> MWYyZDFlMmU2N2Rm\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Secret\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">kubectl.kubernetes.io/last-applied-configuration</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">creationTimestamp</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2020-01-22T18:41:56Z</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysecret\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">resourceVersion</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"164619\"</span>\n  <span class=\"token key atrule\">uid</span><span class=\"token punctuation\">:</span> cfee02d6<span class=\"token punctuation\">-</span>c137<span class=\"token punctuation\">-</span>11e5<span class=\"token punctuation\">-</span>8d73<span class=\"token punctuation\">-</span>42010af00002\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Opaque</code></pre></div>\n<p>아래의 명령어를 적용하면 쿠버네티스 secret을 적용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> mysecret.yaml</code></pre></div>\n<p>위의 <code class=\"language-text\">mysecret.yml</code>파일에 대해 설명하면, <code class=\"language-text\">data</code>가 내가 사용하고자 하는 secret, 즉 환경변수 들인데 base64로 인코딩 해서 넣어준 값이다.\n<code class=\"language-text\">kind</code>를 <code class=\"language-text\">Secret</code>으로 해주어야 Kubernetes Secret으로 인식하고 쿠버네티스 클러스터에서 사용할 수 있게 된다.</p>\n<p>base64로 인코딩 시 <code class=\"language-text\">-n</code> 옵션을 꼭 넣어줘야 하는데, 해당 옵션을 넣어주지 않으면 디코딩된 값에 <code class=\"language-text\">\\n</code>이 들어가서 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'KUBERNETES_SECRET'</span> <span class=\"token operator\">|</span> base64</code></pre></div>\n<p>그리고 metadata 정보 중에서 <code class=\"language-text\">name</code>과 <code class=\"language-text\">namespace</code>가 중요하다. 별도의 설정을 하지 않는다면 같은 <code class=\"language-text\">namespace</code>내의 pod만 해당 secret에 접근이 가능하기 때문이다. <code class=\"language-text\">namespace</code>를 따로 지정해주지 않으면 <code class=\"language-text\">default</code>라는 <code class=\"language-text\">namespace</code>가 할당된다. Azure Kubernetes Deployment Center와 연동할 때 namespace를 입력하게 되어있는데, 여기에 <code class=\"language-text\">default</code>를 입력하지 않았다면, <code class=\"language-text\">namespace</code>를 지정해 줄 필요가 있다.</p>\n<p>기존 Azure 쿠버네티스 deployment center에서 생성해준 workflow 파일에서, <code class=\"language-text\">azure/k8s-deploy@v1.2</code>라는 workflow가 배포를 담당한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> azure/k8s<span class=\"token punctuation\">-</span>deploy@v1.2\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> CUSTOM_NAMESPACE\n        <span class=\"token key atrule\">manifests</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          manifests/deployment.yml\n          manifests/service.yml</span>\n        <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          DOCKER_IMAGE:${{ github.sha }}</span>\n        <span class=\"token key atrule\">imagepullsecrets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          DOCKER_AUTH_SECRET</span></code></pre></div>\n<p>Azure 쿠버네티스의 deployment center와 깃헙 레포를 연동하면, <code class=\"language-text\">.github</code> 디렉토리 아래에 <code class=\"language-text\">workflow</code>디렉토리 말고, 프로젝트 root에 <code class=\"language-text\">manifests</code>라는 디렉토리를 생성해준다. 해당 디렉토리 아래에 <code class=\"language-text\">deployment.yml</code>과 <code class=\"language-text\">service.yml</code>이라는 파일이 있고, <code class=\"language-text\">azure/k8s-deploy</code> workflow에서 두 파일에 대해 <code class=\"language-text\">kubernetes apply -f FILENAME</code>을 실시한다.</p>\n<p>따라서 <code class=\"language-text\">secret.yml</code>이라는 파일을 <code class=\"language-text\">manifests</code> 디렉토리 안에 추가하여 github secret으로 변수를 입력하려고 했으나, 환경변수는 자주 바뀔 일이 없으니 반복적으로 작업할 필요가 없다고 판단하여 일회성으로 업데이트했다. 아래와 같이 yml파일을 생성하고 <code class=\"language-text\">kubernetes apply</code> 명령어를 사용해서 secret을 적용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Secret\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Opaque\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CUSTOM_SECRET_NAME\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> CUSTOM_NAMESPACE\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">CUSTOM_SECRET_KEY</span><span class=\"token punctuation\">:</span> YWRtaW4=</code></pre></div>\n<p>이제 pod에서 적용한 쿠버네티스 secret들을 사용할 수 있도록 <code class=\"language-text\">deployment.yml</code>파일을 수정해줘야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span> <span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> POD_NAME\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> POD_NAME\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> IMAGE_NAME\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8000</span>\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ENVIRONMENT_VARIABLE\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span> \n                <span class=\"token key atrule\">secretKeyRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CUSTOM_SECRET_NAME\n                  <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> CUSTOM_SECRET_KEY\n                  <span class=\"token key atrule\">optional</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>이제 깃헙 액션에서 워크플로우가 잘 돌아간 것을 확인하고, curl을 통해 간단하게 로그인만 테스트 해보기로 한다.\n<img src=\"https://i.imgur.com/zhQPQ8d.png\" alt=\"login-success\"></p>\n<p>잘 작동하는 것을 확인할 수 있다.</p>","fields":{"slug":"/posts/2022//azure/adding-kubernetes-secrets-to-deployment-center","tagSlugs":["/tag/kubernetes/","/tag/azure/"]},"frontmatter":{"date":"2022-08-14T15:41:37.121Z","description":"Kubernetes Secret을 사용한 환경변수 적용","tags":["Kubernetes","Azure"],"title":"Azure Kubernetes Deployment Center에서 환경변수 활용법","socialImage":null}}},"pageContext":{"slug":"/posts/2022//azure/adding-kubernetes-secrets-to-deployment-center"}},"staticQueryHashes":["251939775","288581551","401334301"]}