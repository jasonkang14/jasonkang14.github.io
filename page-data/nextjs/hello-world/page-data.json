{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/nextjs/hello-world","result":{"data":{"markdownRemark":{"id":"e8a8aec2-0bb0-573a-9a2f-78f68fd53cfe","html":"<p><a href=\"https://jasonkang14.github.io/fastapi/signup-view\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">서버에서 회원가입 api</a>를 만들었으니, 이제 클라이언트를 만들어본다.</p>\n<p>모바일 앱으로 하려다가, 개발자 등록 비용도 지불해야하고, 승인하는 절차도 오래걸리니 웹으로 일단 만들어 보려고 한다. 하는김에 <a href=\"https://developers.google.com/search/docs/beginner/seo-starter-guide\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SEO</a>에 유리하도록 Server-Side Rendering을 하기 위해 <a href=\"https://nextjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Next.js</a>를 선택했다. Next.js를 선택한 또 다른 이유는 배포가 매우 쉽기 때문인데, Vercel에 깃헙 레포만 등록해주면 자동으로 CI/CD 까지 다 해준다.</p>\n<p>이제 본격적으로 시키는 대로 init을 해본다. 언어는 TypeScript를 사용하려고 하는데, 그 이유는 University College London과 마이크로소프트가 발표한 <a href=\"https://earlbarr.com/publications/typestudy.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">논문</a>에 따르면, 타입스크립트를 사용하면 버그가 15%정도 줄어든다고 한다. 성격상 놓치는 부분이 많을거라서, 언어의 힘을 빌려본다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx create-next-app mukkang_client <span class=\"token parameter variable\">--typescript</span></code></pre></div>\n<p>위 명령어를 실행하면 아래와 같은 구조의 tree가 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n├── README.md\n├── next-env.d.ts\n├── next.config.js\n├── node_modules\n├── package-lock.json\n├── package.json\n├── pages\n│   ├── _app.tsx\n│   ├── api\n│   │   └── hello.ts\n│   └── index.tsx\n├── public\n│   ├── favicon.ico\n│   └── vercel.svg\n├── styles\n│   ├── Home.module.css\n│   └── globals.css\n└── tsconfig.json</code></pre></div>\n<p>예전에 사이드 프로젝트를 하기 위해서 받아놓은 디자인이 있어서, 그 디자인을 활용하려고 한다. 같이 진행하기로 했던 친구한테 허락도 받았다. 스타일은… 뭐 이것저것 써보려다가 그냥 styled-component로 간다. 패키지를 설치하고 디자이너분이 주셨던 컬러와 폰트 크기들을 미리 세팅한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--save</span> styled-components <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @types/styled-components</code></pre></div>\n<p>폰트는 <a href=\"https://fontsource.org/fonts/noto-sans-kr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fontsource</a>에서 다운받았다. 직접 .otf와 같은 파일을 다운받아서 적용하는 것보다 용량이 많이 세이브 된다.\n<img src=\"https://i.imgur.com/bYp4Gtr.png\" alt=\"fontsource vs localfile\">\n회사에 적용하려고 스크린샷 찍어둔게 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--save</span> @fontsource/noto-sans-kr</code></pre></div>\n<p>이미 있는 <code class=\"language-text\">styles</code> 디렉토리에 <code class=\"language-text\">fonts.ts</code>를 추가하고, <code class=\"language-text\">globals.css</code>에 컬러들을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// fonts.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Bold <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  font-weight: bold;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Regular <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  font-weight: regular;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">H1</span> <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Bold<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n  font-size: 30px;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* global.css */</span>\n\n<span class=\"token selector\">html,\nbody</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Noto Sans KR\"</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">*</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--primary</span><span class=\"token punctuation\">:</span> #1D2745<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--sub-100</span><span class=\"token punctuation\">:</span> #1de5d4<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--sub-200</span><span class=\"token punctuation\">:</span> #f52c50<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--white</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--mono-100</span><span class=\"token punctuation\">:</span> #f1f1f1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--mono-200</span><span class=\"token punctuation\">:</span> #bebebe<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--error</span><span class=\"token punctuation\">:</span> #d01e1e<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">npm run dev</code>를 통해 화면이 잘 나오는 것을 확인할 수 있다. 절대경로 사용을 선호하기 때문에 <code class=\"language-text\">tsconfig.json</code>에서 <code class=\"language-text\">baseUrl</code>을 설정해주고 싶은데, 아직은 어떤식으로 디렉토리 구조를 설정할지 결정하지 못했기 때문에 일단은 여기까지만 하도록 한다.</p>","fields":{"slug":"/posts/2022//nextjs/hello-world","tagSlugs":["/tag/nextjs/"]},"frontmatter":{"date":"2022-07-19T11:21:37.121Z","description":"Next.js로 Hello World!","tags":["Nextjs"],"title":"Hello World from Next.js","socialImage":null}}},"pageContext":{"slug":"/posts/2022//nextjs/hello-world"}},"staticQueryHashes":["251939775","288581551","401334301"]}