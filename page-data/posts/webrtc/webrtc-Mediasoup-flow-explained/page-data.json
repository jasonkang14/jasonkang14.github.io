{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/webrtc/webrtc-Mediasoup-flow-explained","result":{"data":{"markdownRemark":{"id":"bf9f1024-1499-57f2-ae80-6a43e340b153","html":"<p>###Mediasoup is an SFU(Selective Forwarding Unit) which receives audio and video streams from endpoints and relays them to everyone else</p>\n<ol>\n<li>\n<p>Device Loading</p>\n<ul>\n<li>retrieve the <code class=\"language-text\">rtpCapabilities</code> of a router from the server and uses the information to load device</li>\n</ul>\n</li>\n<li>\n<p>Create WebRTCTransport</p>\n<ul>\n<li>create a <code class=\"language-text\">sendTransport</code> and a <code class=\"language-text\">localTransport</code></li>\n<li><code class=\"language-text\">transports</code> must be created both in the client-side and the server-side</li>\n</ul>\n</li>\n<li>\n<p>Connect WebRTCTransport</p>\n<ul>\n<li>this is done by calling <code class=\"language-text\">sendTransport.produce()</code> or <code class=\"language-text\">recvTransport.consume()</code> in the client side.</li>\n<li>you have to connect the transport created in the server-side with the <code class=\"language-text\">dtlsParameter</code> of the device used to make a WebRTC connection.</li>\n</ul>\n</li>\n<li>\n<p>Produce</p>\n<ul>\n<li>When you call <code class=\"language-text\">sendTransport.produce()</code> in the client-side, <code class=\"language-text\">sendTransport.on(\"connect\")</code> event is fired.</li>\n<li>If the connection is successful, <code class=\"language-text\">sendTransport.on(\"produce\")</code> event is fired, which creates a producer in the server-side.</li>\n</ul>\n</li>\n<li>\n<p>Consume</p>\n<ul>\n<li>When there is a new <code class=\"language-text\">producer</code>, participants must <code class=\"language-text\">consume</code> the otherâ€™s <code class=\"language-text\">producer</code>.</li>\n<li>Create a <code class=\"language-text\">consumer</code> in the server-side first, and then use <code class=\"language-text\">socket.io</code> to let the client-side know that there is a new <code class=\"language-text\">consumer</code> created in the server-side</li>\n<li>The client-side then creates a <code class=\"language-text\">consumer</code> using the information from the server-side</li>\n</ul>\n</li>\n<li>\n<p>General</p>\n<ul>\n<li>When you build a WebRTC connection using <code class=\"language-text\">mediasoup</code>, <code class=\"language-text\">transports</code>, <code class=\"language-text\">producer</code>, and <code class=\"language-text\">consumer</code> must be created both in the client-side and the server-side. And the client-side and the server-side must create the three components using the same information.</li>\n</ul>\n</li>\n</ol>","fields":{"slug":"/posts/2019//posts/webrtc/webrtc-Mediasoup-flow-explained","tagSlugs":["/tag/webrtc/"]},"frontmatter":{"date":"2019-08-20T22:27:37.121Z","description":"Mediasoup Flow explained","tags":["WebRTC"],"title":"WebRTC[03] - Mediasoup Flow Explained","socialImage":null}}},"pageContext":{"slug":"/posts/2019//posts/webrtc/webrtc-Mediasoup-flow-explained"}},"staticQueryHashes":["251939775","288581551","401334301"]}