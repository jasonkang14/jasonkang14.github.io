{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/webrtc/ice-candidate-exchange","result":{"data":{"markdownRemark":{"id":"99bda1b8-8cac-5134-9552-b0296aa69091","html":"<p>Simply put, ICE candidate exchange is simply a negotiation between to peers to see which ICE candidates—or an ICE candidate pair—to use in order to establish a WebRTC connection.</p>\n<p>An ICE candidate is an object that looks like this</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token punctuation\">{</span>\n  candidate<span class=\"token operator\">:</span> <span class=\"token string\">\"candidate:2322976989 1 tcp 1518280447 IPADDRESS PORT typ host tcptype passive generation 0 ufrag UXEY network-id 1 network-cost 10\"</span><span class=\"token punctuation\">;</span>\n  sdpMLineIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  sdpMid<span class=\"token operator\">:</span> <span class=\"token string\">\"audio\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Before negotiating ICE candidates, a peer must gather candidate addresses where candidate is a transport address, which is a combination of IP address and port for a particular transport protocol.</p>\n<p>There are three types of candidates: host, server-reflexive, and relayed. There is also a peer-reflexive candidate, but I will talk about it in a later post.</p>\n<p>Host candidates are obtained from physical or logical netowrk interfaces such as public internet or a private network. Host candidates can be easily understood as the one for which its IP address is the actual, direct IP address of a remote peer. like something you would retrieve from a local computer.</p>\n<p>Server-reflexive candidates are obtained from either a STUN or TURN server. The IP of a server-reflexive candidate indicates an intermediary address to represent the candidate’s peer anonymously.</p>\n<p>Relayed candidates only from a TURN server. Their IP addresses are addresses the TURN server uses to forward the media between two peers.</p>\n<p>ICE candidate exchange requires connectivity checks through which the two peers decide wich ICE candidate to use to communicate with each other. Each peer creates a list of candidates based on their priorities and share the lists and performs connectivity checks as they go down the list.</p>\n<p>The steps could be summarized like below;</p>\n<ol>\n<li>\n<p>Sort the candidate pairs in priority order.</p>\n</li>\n<li>\n<p>Send checks on each candidate pair in priority order.</p>\n</li>\n<li>\n<p>Acknowledge checks received from the other agent.</p>\n</li>\n</ol>\n<p>When the checks are complete, the two candidates form a candidate pair through wich the two peers communicate by sending media through the pair.</p>","fields":{"slug":"/posts/2019//posts/webrtc/ice-candidate-exchange","tagSlugs":["/tag/webrtc/"]},"frontmatter":{"date":"2019-09-08T19:27:37.121Z","description":"How ICE candidate exchange works in WebRTC flow","tags":["WebRTC"],"title":"WebRTC[04] ICE Candidate Exchange","socialImage":null}}},"pageContext":{"slug":"/posts/2019//posts/webrtc/ice-candidate-exchange"}},"staticQueryHashes":["251939775","288581551","401334301"]}