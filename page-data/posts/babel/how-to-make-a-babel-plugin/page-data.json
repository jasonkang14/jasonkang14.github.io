{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/babel/how-to-make-a-babel-plugin","result":{"data":{"markdownRemark":{"id":"0a3584e4-e486-5687-9f54-247cbb28efae","html":"<p>Babel provides APIs so that anyone can create a preset and plugin of their own.</p>\n<p>Babel plugin changes a code based on AST(Abstract Syntax Tree). Therefore, you have to know the structure of AST in order to create your own plugin</p>\n<p>you can found the full code on <a href=\"https://github.com/jasonkang14/babel_practice/tree/master/test-babel-custom-plugin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a></p>\n<ol>\n<li>\n<p>Basic structure of a babel plugin</p>\n<ul>\n<li>exports a function with a <code class=\"language-text\">types</code> parameter</li>\n<li>uses the <code class=\"language-text\">types</code> parameter to make a node</li>\n<li>the <code class=\"language-text\">types</code> node is used to check the tyoe of the AST node</li>\n<li>nothing happens if you return an empty object.</li>\n</ul>\n</li>\n<li>\n<p>A babel plugin to remove console.log’s</p>\n<ul>\n<li>this is the structure of the AST of <code class=\"language-text\">console.log('asdf')</code>;</li>\n<li>console.log code starts with an <code class=\"language-text\">ExpressionStatement</code> node</li>\n<li>a code that calls a function or a method is a <code class=\"language-text\">CallExpression</code> node</li>\n<li>a <code class=\"language-text\">MemberExpression</code> node inside the <code class=\"language-text\">CallExpression</code> node calls a method</li>\n<li>the <code class=\"language-text\">MemberExpression</code> node has the information about the object and the method</li>\n</ul>\n</li>\n<li>\n<p>A babel plugin to add console.log’s</p>\n<ul>\n<li>this is the structure of the AST of a simple function</li>\n<li>a code that declares the function is a <code class=\"language-text\">FunctionDeclaration</code> node</li>\n<li>the name of the function is the value of <code class=\"language-text\">id</code></li>\n<li>all the nodes of the code of the function is inside the body of a <code class=\"language-text\">BlockStatement</code> node</li>\n<li>We are trying to add a <code class=\"language-text\">console.log</code> at the very beginning of the array</li>\n</ul>\n</li>\n</ol>","fields":{"slug":"/posts/2019//posts/babel/how-to-make-a-babel-plugin","tagSlugs":["/tag/babel/"]},"frontmatter":{"date":"2019-12-05T17:27:37.121Z","description":"How to make a babel plugin","tags":["Babel"],"title":"Babel - How to Make a Babel Plugin","socialImage":null}}},"pageContext":{"slug":"/posts/2019//posts/babel/how-to-make-a-babel-plugin"}},"staticQueryHashes":["251939775","288581551","401334301"]}