{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/javascript/this-bind-apply-call","result":{"data":{"markdownRemark":{"id":"c6a78775-4f28-53fb-bf88-0163c1d020ec","html":"<ol>\n<li><code class=\"language-text\">this</code>\n<ul>\n<li><code class=\"language-text\">this</code> is defined/determined by how a function is called.</li>\n<li>Global Context: <code class=\"language-text\">this</code> refers to the global object (<code class=\"language-text\">window</code> in browser, <code class=\"language-text\">global</code> in node.js)</li>\n<li>Functional Context:\n<ul>\n<li>if not in <code class=\"language-text\">strict mode</code>, <code class=\"language-text\">this</code> refers to the global object</li>\n<li>if in <code class=\"language-text\">strict mode</code>, <code class=\"language-text\">this</code> is undefined</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see strict mode</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<ul>\n<li>the above is because function <code class=\"language-text\">f2</code> is called directly. not as a method or a property of the <code class=\"language-text\">window</code> object</li>\n<li>To set the value of this to a particular value when calling a function, use <code class=\"language-text\">call()</code>, or <code class=\"language-text\">apply()</code></li>\n</ul>\n<ol start=\"2\">\n<li><code class=\"language-text\">apply</code> / <code class=\"language-text\">call</code></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Custom\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"Global\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">whatsThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">whatsThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Global'</span>\n<span class=\"token function\">whatsThis</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Custom'</span>\n<span class=\"token function\">whatsThis</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Custom'</span></code></pre></div>\n<p>if you call a function without <code class=\"language-text\">call</code> or <code class=\"language-text\">apply</code>, <code class=\"language-text\">this</code> refers to the <code class=\"language-text\">window</code> object. However, if you call the same function with <code class=\"language-text\">call</code> or <code class=\"language-text\">apply</code>, you set <code class=\"language-text\">this</code> as the <code class=\"language-text\">object</code> with which you are calling the function.</p>\n<p>if the value you are passing with <code class=\"language-text\">call</code> or <code class=\"language-text\">apply</code> is not an object, the browser will use the internal method <code class=\"language-text\">ToObject()</code> in order to convert it to an object.</p>\n<ol start=\"3\">\n<li>\n<p><code class=\"language-text\">bind</code></p>\n<ul>\n<li>if you call a function using bind like <code class=\"language-text\">foo.bind(someObject)</code> this is the <code class=\"language-text\">someObject</code> regardless of how the function is being called.</li>\n<li>but you cannot <code class=\"language-text\">bind</code> more than once.</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">\"azerty\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// azerty</span>\n\n<span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> <span class=\"token function\">g</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yoo\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// bind only works once!</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// azerty</span></code></pre></div>\n<ol start=\"4\">\n<li>\n<p>arrow function</p>\n<ul>\n<li>if you use an arrow function, you donâ€™t have to bind this.</li>\n</ul>\n</li>\n</ol>","fields":{"slug":"/posts/2019//posts/javascript/this-bind-apply-call","tagSlugs":["/tag/javascript/"]},"frontmatter":{"date":"2019-11-30T12:53:37.121Z","description":"Basics of JavaScript: this, apply, call, bind, arrow function","tags":["JavaScript"],"title":"JavaScript - this, apply, call, bind, arrow function","socialImage":null}}},"pageContext":{"slug":"/posts/2019//posts/javascript/this-bind-apply-call"}},"staticQueryHashes":["251939775","288581551","401334301"]}