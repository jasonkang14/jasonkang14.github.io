{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/git-rebase","result":{"data":{"markdownRemark":{"id":"ef0c86f0-013c-593a-ac56-946700e5808d","html":"<p>I was taught to use <code class=\"language-text\">git rebase</code> from now on before making a <code class=\"language-text\">pull request</code>. Honestly, the command it self was confusing. This is how I understood <code class=\"language-text\">git rebase</code></p>\n<ol>\n<li>You are <code class=\"language-text\">rebasing</code> the <code class=\"language-text\">master</code> branch.\nThe command for <code class=\"language-text\">git rebase</code> is <code class=\"language-text\">git rebase -i master</code>. <code class=\"language-text\">-i</code> represents interactive, which allows you to choose commits to include as you rebase your master branch.</li>\n</ol>\n<p>After using the command, you face a message like the image below;\n<img src=\"https://scontent-gmp1-1.xx.fbcdn.net/v/t1.0-9/67501828_10219354644757759_6212543380459618304_o.jpg?_nc_cat=110&#x26;_nc_oc=AQkU3NMI1N-Dt3nhhMx3X3hjcBTPU36dROO_QyGiD2i3tsOx4NjDBAiA8LESjLeZ-Lo&#x26;_nc_ht=scontent-gmp1-1.xx&#x26;oh=b3b11394c762f66891a3e793624a49ab&#x26;oe=5DC07CD2\" alt=\"git rebase\"></p>\n<p>Using the commands explained, you can choose which commits to use. If you are going to use all the commands, you just have to leave the top commit as pick, and choose the rest as s, or <code class=\"language-text\">squash</code> so that all the commits can be <code class=\"language-text\">squashed</code> together.</p>\n<ol start=\"2\">\n<li>Conflicts may occur in every step.\nForgot to take a screenshot of it, but I faced 3 conflicts while rebasing 7 different commits. You have to be careful as you resolve the conflicts.</li>\n</ol>\n<p>So then, why do you have to use <code class=\"language-text\">git rebase</code> when you can simply just <code class=\"language-text\">git add</code> and then <code class=\"language-text\">git commit</code>?</p>\n<p><code class=\"language-text\">git rebase</code> ensures that the orders of commits do not get messed up. When you make a <code class=\"language-text\">pull request</code> the master/develop branch pulls each commit based on the time that it was made. Therefore, it is difficult to track down the history of each commit. And it gets worse if you have to revert your commit since commits from different feature branches are all mixed together.</p>\n<p>By using <code class=\"language-text\">git rebase</code>, you need to take more time before making a <code class=\"language-text\">pull request</code>, but you can prevent the master branch from having mixed-up history of commits from different branches.</p>","fields":{"slug":"/posts/2019//posts/git-rebase","tagSlugs":["/tag/git/"]},"frontmatter":{"date":"2019-07-15T23:27:37.121Z","description":"How I overcame my confusion using git rebase","tags":["Git"],"title":"Git Rebase - How I struggled using it for the first time","socialImage":null}}},"pageContext":{"slug":"/posts/2019//posts/git-rebase"}},"staticQueryHashes":["251939775","288581551","401334301"]}