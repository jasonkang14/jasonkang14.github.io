{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/React-Remaking-Miniter-Using-React-part-one","result":{"data":{"markdownRemark":{"id":"8c2f8b88-75ed-5467-9dc7-ca18b56520ae","html":"<p>Decided to dig deeper into the front-end development. Used <code class=\"language-text\">React</code> to re-do the miniter project which I had done using DOM\n#1. JSX format\nSimply put, it’s using HTML elements as a string like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const name = 'Josh Perez';\nconst element = &lt;h1>Hello, {name}&lt;/h1>;\n\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);</code></pre></div>\n<p>Any JavaScript expression can go inside the curly braces in JSX. For the longest time, I was wondering why every single example was rendinring the element to document.getElementById(‘root’) and found out that HTML components written in React becomes children to that element. like below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!doctype html>\n&lt;html lang=\"en>\n  &lt;head>...&lt;/head>\n  &lt;body>\n    &lt;noscript>You need to enable JavaScript to run this app.&lt;/noscript>\n    &lt;div id=\"root>...&lt;/div>\n      &lt;!--\n        ... has code written in React\n      -->\n  &lt;script>...&lt;/script>\n &lt;/body>\n&lt;/html></code></pre></div>\n<p>You can just close the element directly like this. without a separate closing tag</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;button name=\"input-btn\" /></code></pre></div>\n<p>#2. JSX as an object\nif you write something like this,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const element = (\n  &lt;h1 className=\"greeting\">\n    Hello, world!\n  &lt;/h1>\n);</code></pre></div>\n<p>this is same as this</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const element = React.createElement(\n  'h1',\n  {className: 'greeting'},\n  'Hello, world!'\n);</code></pre></div>","fields":{"slug":"/posts/2019//posts/React-Remaking-Miniter-Using-React-part-one","tagSlugs":["/tag/react/"]},"frontmatter":{"date":"2019-06-22T22:56:37.121Z","description":"Remaking Miniter Using React","tags":["React"],"title":"React[01] Remaking Miniter Using React I - JSX","socialImage":null}}},"pageContext":{"slug":"/posts/2019//posts/React-Remaking-Miniter-Using-React-part-one"}},"staticQueryHashes":["251939775","288581551","401334301"]}