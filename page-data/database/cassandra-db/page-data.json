{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/database/cassandra-db","result":{"data":{"markdownRemark":{"id":"16da2bcf-4594-56f9-b203-57ca9f2cdd00","html":"<h1 id=\"tldr\" style=\"position:relative;\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h1>\n<h3 id=\"cassandradb는-consistency를-희생하고-availability와-partition-tolerance에-집중한-nosql-데이터베이스이다\" style=\"position:relative;\"><a href=\"#cassandradb%EB%8A%94-consistency%EB%A5%BC-%ED%9D%AC%EC%83%9D%ED%95%98%EA%B3%A0-availability%EC%99%80-partition-tolerance%EC%97%90-%EC%A7%91%EC%A4%91%ED%95%9C-nosql-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%9D%B4%EB%8B%A4\" aria-label=\"cassandradb는 consistency를 희생하고 availability와 partition tolerance에 집중한 nosql 데이터베이스이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CassandraDB는 consistency를 희생하고 availability와 partition-tolerance에 집중한 NoSQL 데이터베이스이다</h3>\n<p><a href=\"https://cassandra.apache.org/_/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CassandraDB</a>는 페이스북에서 사용하는 NoSQL이다. 페이스북의 특징과, READ/WRITE가 빠른 NoSQL의 장점과, 분산저장과 availability에 최적화 된 CassandraDB의 특징이 잘 맞기 때문인 것으로 보인다.</p>\n<p>Database를 선정할 때 <code class=\"language-text\">consistency</code>, <code class=\"language-text\">availability</code>, <code class=\"language-text\">partition-tolerance</code>라는 3가지 항목 중 더 중요한 2가지를 고려해서 선정한다고 한다. CassandraDB는 <code class=\"language-text\">consistency</code> 가 부족한 대신, <code class=\"language-text\">availability</code>와 <code class=\"language-text\">partition-tolerance</code>에서 강점을 보인다.</p>\n<p><img src=\"https://i.imgur.com/AkOPQZi.png\" alt=\"CAP Theorem\"></p>\n<p>3가지 특성에 대해 먼저 살펴보자면, <code class=\"language-text\">consistency</code>는 데이터가 일관성이 있어야 한다는 뜻이다. 어떤 node에 접근하던지 상관없이 query를 시도하면 같은 데이터를 받아올 수 있어야 한다는 것을 뜻한다.</p>\n<p>CassandraDB는 <code class=\"language-text\">eventual consistency</code>를 따르는데, 간단하게 설명하자면 database에 write된 정보를 바로 read할 수 없다는 뜻이다. 이는 CassandraDB에 write를 시도하면, 데이터가 하나의 node에 저장되는 것이 아니라 여러 node에 분산저장되기 때문에, 분산저장이 마무리 되기 전까지는 Read할 수 없기 때문이다. 페이스북을 사용해보면, 내가 작성한 포스트가 바로 보이지 않고 새로고침을 하거나 조금 뒤에 보이는 것을 확인할 수 있다. post를 작성하면 어떤 node에는 내가 작성한 포스트 데이터가 있고, 어떤 node에는 없기 때문에 <code class=\"language-text\">consistency</code>가 성립하지 않는 것이다. 이런 부분이 CassandraDB의 특징을 반영한 것이다.</p>\n<p><code class=\"language-text\">Availabililty</code>는 우리말 그대로 바꾸자면 이용이 가능한지를 뜻하는데, 데이터베이스가 갑자기 고장나지 않고 얼마나 잘 작동하는지를 말한다. 데이터베이스가 얼마나 reliable한지를 뜻하는데, 기술적으로 설명하자면 node하나가 죽더라도 클러스터에 접근할 수 있는지를 뜻한다.</p>\n<p>데이터베이스의 구조상 이런 부분이 어려운 경우가 있다. <a href=\"https://hbase.apache.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hbase</a>를 예로들면, Hbase는 HMaster라는 노드가 어떤 노드에 데이터가 있는지에 대한 정보를 가지고 있는데, 이 HMaster가 죽어버리면 HMaster가 다시 살아날 때 까지 클러스터에 접근할 수 없다.</p>\n<p><img src=\"https://i.imgur.com/qV14jtM.png\" alt=\"Cassandra Architecture\"></p>\n<p>이와 달리 CassandraDB는 별도의 master node가 존재하지 않고, 모든 node가 서로 소통하며 데이터를 저장 하기 때문에—여러 node들이 각각 소통한다고 해서 <code class=\"language-text\">gossip protocol</code>이라는 이름을 붙였다고 한다—하나의 node가 죽는다고 하더라도 데이터베이스 운영에 타격을 입지 않는다는 장점이 있다.</p>\n<p>마지막으로 <code class=\"language-text\">partition-tolerance</code>는 partition이 잘 작동하지 않더라도 데이터베이스 운용에는 문제가 없어야 한다는 것을 뜻한다. availability에 대해서 이야기 할 때, master node가 따로 없고 모든 node들이 서로 소통하며 데이터를 저장한다고 했는데, 네트워크 등의 문제로 이 node들 간의 소통이 원활하지 않을 때도 데이터베이스는 잘 작동해야 한다는 뜻이다. node들은 네트워크 상황이 좋아지면 서로와 다시 sync해서 통일성을 갖추는 방식이다.</p>\n<p>CassandraDB는 NoSQL이지만 <a href=\"https://cassandra.apache.org/doc/latest/cassandra/cql/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cassandra Query Language(CQL)</a>로 간단한 쿼리가 가능하다. de-normalized된 데이터—여러곳에 복제되어 데이터가 저장된 경우-에 대해 primary key를 쿼리할 수 있다.</p>\n<p>CassandraDB는 <a href=\"https://www.datastax.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DataStax</a>와 같이 사용해서 <a href=\"https://spark.apache.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spark</a>와 연동할 수 있다.</p>\n<p><img src=\"https://i.imgur.com/9uFBWJG.png\" alt=\"Cassandra with Spark\"></p>\n<p>Spark와 연동할 경우 CassandraDB의 table을 DataFrame처럼 사용할 수 있다. <a href=\"https://grouplens.org/datasets/movielens/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">movielens</a>데이터를 사용해서 Spark와 CassandraDB를 연동한 코드를 첨부한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pyspark<span class=\"token punctuation\">.</span>sql <span class=\"token keyword\">import</span> functions<span class=\"token punctuation\">,</span> Row<span class=\"token punctuation\">,</span> SparkSession\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">parseInput</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tfields <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> Row<span class=\"token punctuation\">(</span>user_id <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> gender <span class=\"token operator\">=</span> fields<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\\\n\t\toccupation <span class=\"token operator\">=</span> fields<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">zip</span> <span class=\"token operator\">=</span> fields<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># CassandraDB가 현재 localhost에서 돌고있음</span>\n\tspark <span class=\"token operator\">=</span> SparkSession<span class=\"token punctuation\">.</span>builder<span class=\"token punctuation\">.</span>appName<span class=\"token punctuation\">(</span><span class=\"token string\">'CassandraIntegration'</span><span class=\"token punctuation\">)</span>\\\n\t\t\t\t\t\t<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">(</span><span class=\"token string\">'spark.cassandra.connection.host'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span>\\ \n\t\t\t\t\t\t<span class=\"token punctuation\">.</span>getOrCreate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token comment\"># 데이터는 HDFS에서 가져온다</span>\n\tlines <span class=\"token operator\">=</span> spark<span class=\"token punctuation\">.</span>sparkContext<span class=\"token punctuation\">.</span>textFile<span class=\"token punctuation\">(</span><span class=\"token string\">'hdfs://user/maria_dev/ml-100k/u.user'</span><span class=\"token punctuation\">)</span>\n\tusers <span class=\"token operator\">=</span> lines<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>parseInput<span class=\"token punctuation\">)</span>\n\tusersDataset <span class=\"token operator\">=</span> spark<span class=\"token punctuation\">.</span>createDataFrame<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span>\n\n\tuserDataset<span class=\"token punctuation\">.</span>write\\\n\t\t<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'org.apache.spark.sql.cassandra'</span><span class=\"token punctuation\">)</span>\\\n\t\t<span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">(</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span>\\\n\t\t<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">(</span>table<span class=\"token operator\">=</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> keyspace<span class=\"token operator\">=</span><span class=\"token string\">'movielens'</span><span class=\"token punctuation\">)</span>\\\n\t\t<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\treadUsers <span class=\"token operator\">=</span> spark<span class=\"token punctuation\">.</span>read\\\n\t\t<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'org.apache.spark.sql.cassandra'</span><span class=\"token punctuation\">)</span>\\\n\t\t<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">(</span>table<span class=\"token operator\">=</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> keyspace<span class=\"token operator\">=</span><span class=\"token string\">'movielens'</span><span class=\"token punctuation\">)</span>\\\n\t\t<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\treadUsers<span class=\"token punctuation\">.</span>createOrReplcaeTempView<span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n\n\tsqlDF <span class=\"token operator\">=</span> spark<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT * FROM users WHERE age &lt; 20'</span><span class=\"token punctuation\">)</span>\n\tsqlDF<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tspark<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>참고자료\n<a href=\"https://www.udemy.com/course/best-hadoop/learn/lecture/28319536#content\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">udemy 강의</a>\n<a href=\"https://codahale.com/you-cant-sacrifice-partition-tolerance/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">You Can’t Sacrifice Partition Tolerance</a></p>","fields":{"slug":"/posts/2022//database/cassandra-db","tagSlugs":["/tag/database/"]},"frontmatter":{"date":"2022-07-10T18:21:37.121Z","description":"NoSQL중 하나인 CassandraDB에 대해 알아본다","tags":["Database"],"title":"Cassandra DB","socialImage":null}}},"pageContext":{"slug":"/posts/2022//database/cassandra-db"}},"staticQueryHashes":["251939775","288581551","401334301"]}