{"componentChunkName":"component---src-templates-index-template-index-template-tsx","path":"/page/7","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/database/","slug":"/posts/2023//database/column-oriented-storage"},"frontmatter":{"description":"Colum-Oriented가 read효율을 극대화하는 방법","category":"Database","title":"Column-Oriented Storage","date":"2023-04-11T20:35:37.121Z","slug":"/database/column-oriented-storage"}}},{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/2023//react/lazy-loading-to-improve-web-vitals"},"frontmatter":{"description":"사용자 경험 개선을 위한 프론트엔드 개발자의 노력","category":"React","title":"Lazy Loading을 활용한 Web Vital개선","date":"2023-04-09T20:35:37.121Z","slug":"/react/lazy-loading-to-improve-web-vitals"}}},{"node":{"fields":{"categorySlug":"/category/database/","slug":"/posts/2023//database/index-to-improve-read"},"frontmatter":{"description":"실행할 query에 맞게 인덱스를 활용하면 read 효율을 개선할 수 있다","category":"Database","title":"인덱스를 활용한 Read 효율 개선","date":"2023-04-05T20:35:37.121Z","slug":"/database/index-to-improve-read"}}},{"node":{"fields":{"categorySlug":"/category/database/","slug":"/posts/2023//database/data-models-and-query-languages"},"frontmatter":{"description":"신선한 재료로 좋은 음식을 만드는 것처럼, 적합한 데이터 모델로 좋은 소프트웨어를 만든다","category":"Database","title":"데이터 모델과 쿼리언어","date":"2023-03-25T20:35:37.121Z","slug":"/database/data-models-and-query-languages"}}}]}},"pageContext":{"limit":4,"offset":28,"pagination":{"currentPage":7,"prevPagePath":"/page/6","nextPagePath":"/page/8","hasNextPage":true,"hasPrevPage":true}}},"staticQueryHashes":["251939775","288581551","401334301","63107425"]}