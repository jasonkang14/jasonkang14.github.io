{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/html/semantic-tags-form-tag-explained","result":{"data":{"markdownRemark":{"id":"c3181521-dd92-5455-93c2-9dfba13b4cef","html":"<p>Semantic tags allow others to understand the structure of your html without looking at detailed script codes in order to ensure that <strong>HTML is used for structure and CSS is used for the style</strong></p>\n<p>Semantic tags indicate what the tags are intended to do. If you use a <strong>div</strong> tag instead of a <strong>form</strong> as a parent of your <strong>input</strong> tags, it is difficult for both users and browsers to understand what the tag is meant to do. <strong>input</strong> tags are usually used as parts of a form for you to <strong>submit</strong> some data. However, if you use a <strong>div</strong> tag instead of a <strong>form</strong> tag as their parents, it is difficult to understand what the <strong>div</strong> tag is for until <strong>input</strong> tags are seen.</p>\n<p>With the programming aspects put aside, the biggest difference that I have found is that when I use a <strong>form</strong> tag, the page refreshes <code class=\"language-text\">onSubmit</code>. In order for me to display a message when I receive a <code class=\"language-text\">status==200</code> messsage, I had to <code class=\"language-text\">event.preventDefault()</code> like below.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token punctuation\">,</span> MouseEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">requestEmailLogin</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nuseEffect <span class=\"token operator\">=</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>appState <span class=\"token operator\">===</span> <span class=\"token constant\">LOGIN_FAIL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setShowLoginFailModal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>appState<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Another problem that I ran into was that when I used a <strong>button</strong> tag instead of an <strong>input</strong> tag with <code class=\"language-text\">type=\"submit\"</code>, I got a following error:<br>\n<code class=\"language-text\">\"Form submission canceled because the form is not connected\"</code></p>\n<p>And this was because when there are more than one <strong>button</strong> tags, the browser fails to see which <strong>button</strong> tag is <code class=\"language-text\">connected</code> with the <strong>form</strong> tag. Therefore, you have to explicitly declare the type of the <strong>button</strong> tag or use an <strong>input</strong> tag with <code class=\"language-text\">type=\"submit\"</code> in order to let the browser know which button is connected with the form.</p>\n<p>In my next post, I will write about the importance of using <strong>section</strong> tags</p>","fields":{"slug":"/posts/2020//html/semantic-tags-form-tag-explained","tagSlugs":["/tag/html/"]},"frontmatter":{"date":"2020-08-30T10:53:37.121Z","description":"Why do I have to use a form tag when div can just do everything","tags":["HTML"],"title":"Semantic Tags - Form tag explained","socialImage":null}}},"pageContext":{"slug":"/posts/2020//html/semantic-tags-form-tag-explained"}},"staticQueryHashes":["251939775","288581551","401334301"]}