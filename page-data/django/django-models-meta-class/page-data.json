{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/django/django-models-meta-class","result":{"data":{"markdownRemark":{"id":"4c5c410b-0012-51b6-bbbb-c16e76874044","html":"<p>According to the <a href=\"https://docs.djangoproject.com/en/3.0/topics/db/models/#meta-options\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">official document</a>, the <code class=\"language-text\">Meta</code> class in a Django model is <strong>anything that is not a field</strong>. One example I provided was <code class=\"language-text\">db_table</code>, which allows you to decide the name of the table instead of using the default <code class=\"language-text\">myapp_modelname</code>.</p>\n<p>Below are some examples;</p>\n<h4 id=\"1-abstract\" style=\"position:relative;\"><a href=\"#1-abstract\" aria-label=\"1 abstract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. abstract</h4>\n<p>If you set <code class=\"language-text\">abstract=True</code>, this model will be an <strong>abstract base class</strong>, which can be used as a model to inherit.</p>\n<h4 id=\"2-app_label\" style=\"position:relative;\"><a href=\"#2-app_label\" aria-label=\"2 app_label permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. app_label</h4>\n<p>Can be used when the model is declared outside an app declared in <code class=\"language-text\">INSTALLED_APPS</code> in <code class=\"language-text\">settings.py</code>. However, I don’t see when I would use this.</p>\n<h4 id=\"3-db_tablespace\" style=\"position:relative;\"><a href=\"#3-db_tablespace\" aria-label=\"3 db_tablespace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. db_tablespace</h4>\n<p>Default is <code class=\"language-text\">DEFAULT_TABLESPACE</code> setting in <code class=\"language-text\">settings.py</code>, which is an empty string, but you can change it according to your needs. I will write a post about talespace later.</p>\n<h4 id=\"4-default_related_name\" style=\"position:relative;\"><a href=\"#4-default_related_name\" aria-label=\"4 default_related_name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. default_related_name</h4>\n<p>The default value for this is <strong>&#x3C;model_name>_set</strong> as in <code class=\"language-text\">membership_set</code> in the post where through relationship was declared. This option also sets the <code class=\"language-text\">related_query_name</code>.</p>\n<h4 id=\"5-get_latest_by\" style=\"position:relative;\"><a href=\"#5-get_latest_by\" aria-label=\"5 get_latest_by permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. get_latest_by</h4>\n<p>The name of a field or a list of field names in a model. This is usually <code class=\"language-text\">DateField</code>, <code class=\"language-text\">DateTimeField</code>, or <code class=\"language-text\">IntegerField</code>, which can be ordered numerically. This specifies the default fields to use in <code class=\"language-text\">manager</code>’s <code class=\"language-text\">latest()</code> and <code class=\"language-text\">earliest()</code> methods.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Latest by ascending order_date.</span>\nget_latest_by <span class=\"token operator\">=</span> <span class=\"token string\">\"order_date\"</span>\n\n<span class=\"token comment\"># Latest by priority descending, order_date ascending.</span>\nget_latest_by <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'-priority'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'order_date'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4 id=\"6-managed\" style=\"position:relative;\"><a href=\"#6-managed\" aria-label=\"6 managed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. managed</h4>\n<p>The default is <code class=\"language-text\">True</code>, however, if set <code class=\"language-text\">False</code>, django does not perform any table creation or deletion operations in this model. This is useful when this model represents an existing table or a database view that has been created by some other means. I think this would come in handy when you are migrating a project build with PHP to Django.</p>\n<h4 id=\"7-order_with_respect_to\" style=\"position:relative;\"><a href=\"#7-order_with_respect_to\" aria-label=\"7 order_with_respect_to permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. order_with_respect_to</h4>\n<p>Declaring that you would like to order your jmodel with respect to aa field, ususally a <code class=\"language-text\">ForeignKey</code> like the example below;</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Answer</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    question <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ...</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        order_with_respect_to <span class=\"token operator\">=</span> <span class=\"token string\">'question'</span></code></pre></div>\n<h4 id=\"8-ordering\" style=\"position:relative;\"><a href=\"#8-ordering\" aria-label=\"8 ordering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. ordering</h4>\n<p>The default ordering for the example. Either a tuple or list of strings and?or query expressions. <code class=\"language-text\">ordering = ['pub_date']</code>, or <code class=\"language-text\">ordering = ['-pub_date']</code> if you ant a descending order. You can also use query expressions like below;</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">'author'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>asc<span class=\"token punctuation\">(</span>nulls_last<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>You want to order it by a model called <code class=\"language-text\">author</code> in an ascending order while making null values sort last.</p>","fields":{"slug":"/posts/2020//django/django-models-meta-class","tagSlugs":["/tag/django/"]},"frontmatter":{"date":"2020-04-30T12:53:37.121Z","description":"Django models: what you can do with Meta options","tags":["Django"],"title":"Django - Models Meta Options","socialImage":null}}},"pageContext":{"slug":"/posts/2020//django/django-models-meta-class"}},"staticQueryHashes":["251939775","288581551","401334301"]}